{"numFailedTestSuites":6,"numFailedTests":15,"numPassedTestSuites":1,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":18,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1557923903748,"success":false,"testResults":[{"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mspotcheck3 › store should have a checkItem function that updates a given items completed property\u001b[39m\u001b[22m\n\n    checkItem should change the completed value of a specified item__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        \u001b[36mconst\u001b[39m test \u001b[33m=\u001b[39m gorceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mfind(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m        expect(test\u001b[33m.\u001b[39mcompleted\u001b[33m,\u001b[39m \u001b[32m'checkItem should change the completed value of a specified item'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    it (\u001b[32m'checkItem function should be a MobX action'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        \u001b[36mconst\u001b[39m checkItem \u001b[33m=\u001b[39m gorceryList\u001b[33m.\u001b[39mcheckItem\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-3/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:27:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mspotcheck3 › checkItem function should be a MobX action\u001b[39m\u001b[22m\n\n    checkItem function should be a MobX action__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        \u001b[36mconst\u001b[39m checkItem \u001b[33m=\u001b[39m gorceryList\u001b[33m.\u001b[39mcheckItem\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        expect(checkItem\u001b[33m.\u001b[39misMobxAction\u001b[33m,\u001b[39m \u001b[32m\"checkItem function should be a MobX action\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m    it (\u001b[32m'Your input should have an onClick which invokes the checkItem function'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m store \u001b[33m=\u001b[39m{gorceryList}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-3/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:32:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mspotcheck3 › Your input should have an onClick which invokes the checkItem function\u001b[39m\u001b[22m\n\n    each Item should be rendered though the Item Component in your app__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m store \u001b[33m=\u001b[39m{gorceryList}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mlength\u001b[33m,\u001b[39m \u001b[32m\"each Item should be rendered though the Item Component in your app\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 37 | \u001b[39m            \u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 | \u001b[39m        let selected \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mfind(\u001b[32m'div'\u001b[39m)\u001b[33m.\u001b[39mprops()\u001b[33m.\u001b[39mclassName\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m        expect(selected\u001b[33m,\u001b[39m \u001b[32m'the parent div returned from your item should have a className property'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-3/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:37:14)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923906509,"start":1557923904812},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-3/ex-1.test.js","testResults":[{"ancestorTitles":["spotcheck3"],"duration":31,"failureMessages":[],"fullName":"spotcheck3 Application should render without crashing","location":null,"numPassingAsserts":0,"status":"passed","title":"Application should render without crashing"},{"ancestorTitles":["spotcheck3"],"duration":7,"failureMessages":["Error: checkItem should change the completed value of a specified item__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-3/ex-1.test.js:27:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"spotcheck3 store should have a checkItem function that updates a given items completed property","location":null,"numPassingAsserts":0,"status":"failed","title":"store should have a checkItem function that updates a given items completed property"},{"ancestorTitles":["spotcheck3"],"duration":3,"failureMessages":["Error: checkItem function should be a MobX action__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-3/ex-1.test.js:32:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"spotcheck3 checkItem function should be a MobX action","location":null,"numPassingAsserts":0,"status":"failed","title":"checkItem function should be a MobX action"},{"ancestorTitles":["spotcheck3"],"duration":49,"failureMessages":["Error: each Item should be rendered though the Item Component in your app__stacktrace__\n    at Object.toBeGreaterThan (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-3/ex-1.test.js:37:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"spotcheck3 Your input should have an onClick which invokes the checkItem function","location":null,"numPassingAsserts":0,"status":"failed","title":"Your input should have an onClick which invokes the checkItem function"}],"skipped":false,"leaks":false},{"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 4 › The store should have a deleteItem function that deletes an item from the list\u001b[39m\u001b[22m\n\n    the addItem function should add an item to the list__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m        \u001b[36mconst\u001b[39m test1 \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mfind(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m        expect(test1\u001b[33m,\u001b[39m \u001b[32m\"the addItem function should add an item to the list\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 22 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m        groceryList\u001b[33m.\u001b[39mdeleteItem(\u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m        \u001b[36mconst\u001b[39m test2 \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mfind(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        expect(test2\u001b[33m,\u001b[39m \u001b[32m\"the delete Item function should delete a given item from the list\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-4.test.js\u001b[39m\u001b[0m\u001b[2m:22:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 4 › deleteItem function should be a MobX action\u001b[39m\u001b[22m\n\n    deleteItem function should be a MobX action__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    it (\u001b[32m'deleteItem function should be a MobX action'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        expect(groceryList\u001b[33m.\u001b[39mdeleteItem\u001b[33m.\u001b[39misMobxAction\u001b[33m,\u001b[39m \u001b[32m\"deleteItem function should be a MobX action\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 30 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m    it(\u001b[32m'delete button should be rendered per each list item and work on click'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        groceryList\u001b[33m.\u001b[39maddItem(\u001b[32m\"test2\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-4.test.js\u001b[39m\u001b[0m\u001b[2m:30:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 4 › delete button should be rendered per each list item and work on click\u001b[39m\u001b[22m\n\n    Method “props” is meant to be run on 1 node. 0 found instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m store \u001b[33m=\u001b[39m {groceryList}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m        let itemLength \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mlength\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 37 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mfind(\u001b[32m'button'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mprops()\u001b[33m.\u001b[39monClick\u001b[33m,\u001b[39m \u001b[32m\"each Item should be rendered with a delete button with an onClick property\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 | \u001b[39m            \u001b[33m.\u001b[39mtoBeDefined()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m        wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mfind(\u001b[32m'button'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39msimulate(\u001b[32m'click'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m        \u001b[36mif\u001b[39m(wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mlength \u001b[33m===\u001b[39m itemLength) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReactWrapper.single (\u001b[2mnode_modules/enzyme/build/ReactWrapper.js\u001b[2m:1718:17)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReactWrapper.props (\u001b[2mnode_modules/enzyme/build/ReactWrapper.js\u001b[2m:1013:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.props (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-4.test.js\u001b[39m\u001b[0m\u001b[2m:37:58)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923906503,"start":1557923904813},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-4.test.js","testResults":[{"ancestorTitles":["exercise 4"],"duration":7,"failureMessages":["Error: the addItem function should add an item to the list__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-4.test.js:22:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 4 The store should have a deleteItem function that deletes an item from the list","location":null,"numPassingAsserts":0,"status":"failed","title":"The store should have a deleteItem function that deletes an item from the list"},{"ancestorTitles":["exercise 4"],"duration":3,"failureMessages":["Error: deleteItem function should be a MobX action__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-4.test.js:30:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 4 deleteItem function should be a MobX action","location":null,"numPassingAsserts":0,"status":"failed","title":"deleteItem function should be a MobX action"},{"ancestorTitles":["exercise 4"],"duration":75,"failureMessages":["Error: Method “props” is meant to be run on 1 node. 0 found instead.\n    at ReactWrapper.single (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/enzyme/build/ReactWrapper.js:1718:17)\n    at ReactWrapper.props (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/enzyme/build/ReactWrapper.js:1013:21)\n    at Object.props (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-4.test.js:37:58)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 4 delete button should be rendered per each list item and work on click","location":null,"numPassingAsserts":0,"status":"failed","title":"delete button should be rendered per each list item and work on click"}],"skipped":false,"leaks":false},{"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 3 › The store should have an editItem function that edits the location of a given item\u001b[39m\u001b[22m\n\n    the editItem button should only edit the locaiton of an item__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m        \u001b[36mconst\u001b[39m test \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mfind(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m        expect(test\u001b[33m,\u001b[39m \u001b[32m\"the editItem button should only edit the locaiton of an item\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 23 | \u001b[39m            \u001b[33m.\u001b[39mtoBeDefined()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m        expect(test\u001b[33m.\u001b[39mlocation\u001b[33m,\u001b[39m \u001b[32m\"The store should have an editItem function that edits the location of a given item\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(\u001b[32m\"wonderland\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeDefined (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-3.test.js\u001b[39m\u001b[0m\u001b[2m:23:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 3 › editItem function should be a MobX action\u001b[39m\u001b[22m\n\n    editItem function should be a MobX action__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m    it (\u001b[32m'editItem function should be a MobX action'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        expect(groceryList\u001b[33m.\u001b[39meditItem\u001b[33m.\u001b[39misMobxAction\u001b[33m,\u001b[39m \u001b[32m\"editItem function should be a MobX action\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 29 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m    it(\u001b[32m'The edit button should be rendered per each list item and work on click'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m store \u001b[33m=\u001b[39m {groceryList}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-3.test.js\u001b[39m\u001b[0m\u001b[2m:29:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 3 › The edit button should be rendered per each list item and work on click\u001b[39m\u001b[22m\n\n    The edit button should be rendered with each item__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m store \u001b[33m=\u001b[39m {groceryList}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mfind(\u001b[32m'button'\u001b[39m)\u001b[33m.\u001b[39mlength\u001b[33m,\u001b[39m \u001b[32m\"The edit button should be rendered with each item\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 34 | \u001b[39m            \u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m        let onClick \u001b[33m=\u001b[39m wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mfind(\u001b[32m'button'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mprop(\u001b[32m'onClick'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m        expect(onClick\u001b[33m,\u001b[39m \u001b[32m\"The edit button should have an onClick property which prompts you for a new location\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m            \u001b[33m.\u001b[39mtoBeDefined()\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-3.test.js\u001b[39m\u001b[0m\u001b[2m:34:14)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923906566,"start":1557923904816},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-3.test.js","testResults":[{"ancestorTitles":["exercise 3"],"duration":8,"failureMessages":["Error: the editItem button should only edit the locaiton of an item__stacktrace__\n    at Object.toBeDefined (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-3.test.js:23:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 3 The store should have an editItem function that edits the location of a given item","location":null,"numPassingAsserts":0,"status":"failed","title":"The store should have an editItem function that edits the location of a given item"},{"ancestorTitles":["exercise 3"],"duration":4,"failureMessages":["Error: editItem function should be a MobX action__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-3.test.js:29:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 3 editItem function should be a MobX action","location":null,"numPassingAsserts":0,"status":"failed","title":"editItem function should be a MobX action"},{"ancestorTitles":["exercise 3"],"duration":72,"failureMessages":["Error: The edit button should be rendered with each item__stacktrace__\n    at Object.toBeGreaterThan (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-3.test.js:34:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 3 The edit button should be rendered per each list item and work on click","location":null,"numPassingAsserts":0,"status":"failed","title":"The edit button should be rendered per each list item and work on click"}],"skipped":false,"leaks":false},{"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › store should have an addItem function that adds a new Item to the stores list property\u001b[39m\u001b[22m\n\n    the addItem function should add a new Item to the store's list property__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m        addItem(\u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m        \u001b[36mconst\u001b[39m test \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mfind(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 18 | \u001b[39m        expect(test\u001b[33m,\u001b[39m \u001b[32m\"the addItem function should add a new Item to the store's list property\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m    it (\u001b[32m'addItem function should be a MobX action'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m        \u001b[36mconst\u001b[39m addItem \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39maddItem\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:18:97)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › addItem function should be a MobX action\u001b[39m\u001b[22m\n\n    the addItem function should be a Mobx action__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m        \u001b[36mconst\u001b[39m addItem \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39maddItem\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m        expect(addItem\u001b[33m,\u001b[39m \u001b[32m\"store should have an addItem function\"\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 23 | \u001b[39m        expect(addItem\u001b[33m.\u001b[39misMobxAction\u001b[33m,\u001b[39m \u001b[32m\"the addItem function should be a Mobx action\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                     \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:23:86)\u001b[2m\u001b[22m\n","numFailingTests":2,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923907159,"start":1557923906632},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":13,"failureMessages":["Error: the addItem function should add a new Item to the store's list property__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-1.test.js:18:97)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise1 store should have an addItem function that adds a new Item to the stores list property","location":null,"numPassingAsserts":0,"status":"failed","title":"store should have an addItem function that adds a new Item to the stores list property"},{"ancestorTitles":["exercise1"],"duration":5,"failureMessages":["Error: the addItem function should be a Mobx action__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-1.test.js:23:86)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise1 addItem function should be a MobX action","location":null,"numPassingAsserts":0,"status":"failed","title":"addItem function should be a MobX action"}],"skipped":false,"leaks":false},{"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mspotcheck1 › groceryList class store should have an observable property \"list\"\u001b[39m\u001b[22m\n\n    the list property should be observable__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m            \u001b[33m.\u001b[39mtoBeDefined()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m        expect(isObservable(store\u001b[33m.\u001b[39mlist)\u001b[33m,\u001b[39m \u001b[32m\"the list property should be observable\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 18 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/spot-check-1/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:18:14)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923907201,"start":1557923906759},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-1/ex-1.test.js","testResults":[{"ancestorTitles":["spotcheck1"],"duration":9,"failureMessages":["Error: the list property should be observable__stacktrace__\n    at Object.toBeTruthy (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-1/ex-1.test.js:18:14)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"spotcheck1 groceryList class store should have an observable property \"list\"","location":null,"numPassingAsserts":0,"status":"failed","title":"groceryList class store should have an observable property \"list\""}],"skipped":false,"leaks":false},{"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › Each item should have a location property\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m    it(\u001b[32m'Each item should have a location property'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 19 | \u001b[39m        expect(groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                        \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m        groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mforEach(i \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m            expect(i\u001b[33m.\u001b[39mlocation\u001b[33m,\u001b[39m \u001b[32m\"each Item should have a location property\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m            expect(isObservableProp(i\u001b[33m,\u001b[39m \u001b[32m\"location\"\u001b[39m)\u001b[33m,\u001b[39m \u001b[32m'The location property should be observable'\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:19:41)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › The location property should have a default value of \"Super Sell\"\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'location' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m    it(\u001b[32m'The location property should have a default value of \"Super Sell\"'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m        let test \u001b[33m=\u001b[39m groceryList\u001b[33m.\u001b[39mlist\u001b[33m.\u001b[39mfind(i \u001b[33m=>\u001b[39m i\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"test\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m        expect(test\u001b[33m.\u001b[39mlocation\u001b[33m,\u001b[39m \u001b[32m\"each Item's location property should have a default value of 'SuperSell'\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                    \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(\u001b[32m\"Super Sell\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    it(\u001b[32m'the location should be rendered next to each item'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.location (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:27:21)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › the location should be rendered next to each item\u001b[39m\u001b[22m\n\n    Method “html” is meant to be run on 1 node. 0 found instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    it(\u001b[32m'the location should be rendered next to each item'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m mount(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m store \u001b[33m=\u001b[39m {groceryList}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[33mItem\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mhtml()\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m,\u001b[39m \u001b[32m\"Each item should be rendered with it's location\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                          \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m            \u001b[33m.\u001b[39mtoContain(\u001b[32m\"super sell\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReactWrapper.single (\u001b[2mnode_modules/enzyme/build/ReactWrapper.js\u001b[2m:1718:17)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReactWrapper.html (\u001b[2mnode_modules/enzyme/build/ReactWrapper.js\u001b[2m:897:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.html (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:32:43)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923907216,"start":1557923906622},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-2.test.js","testResults":[{"ancestorTitles":["exercise 2"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-2.test.js:19:41)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 2 Each item should have a location property","location":null,"numPassingAsserts":0,"status":"failed","title":"Each item should have a location property"},{"ancestorTitles":["exercise 2"],"duration":1,"failureMessages":["TypeError: Cannot read property 'location' of undefined\n    at Object.location (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-2.test.js:27:21)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 2 The location property should have a default value of \"Super Sell\"","location":null,"numPassingAsserts":0,"status":"failed","title":"The location property should have a default value of \"Super Sell\""},{"ancestorTitles":["exercise 2"],"duration":46,"failureMessages":["Error: Method “html” is meant to be run on 1 node. 0 found instead.\n    at ReactWrapper.single (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/enzyme/build/ReactWrapper.js:1718:17)\n    at ReactWrapper.html (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/enzyme/build/ReactWrapper.js:897:21)\n    at Object.html (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/exercises/ex-2.test.js:32:43)\n    at Object.asyncJestTest (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"exercise 2 the location should be rendered next to each item","location":null,"numPassingAsserts":0,"status":"failed","title":"the location should be rendered next to each item"}],"skipped":false,"leaks":false},{"failureMessage":null,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557923907677,"start":1557923907171},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/eranshmil/Desktop/elevation-learn/mobx1-lesson-exercises/tests/spot-check-2/ex-1.test.js","testResults":[{"ancestorTitles":["spotcheck2"],"duration":5,"failureMessages":[],"fullName":"spotcheck2 Application should render without crashing","location":null,"numPassingAsserts":0,"status":"passed","title":"Application should render without crashing"},{"ancestorTitles":["spotcheck2"],"duration":16,"failureMessages":[],"fullName":"spotcheck2 App is reading the mobx store list property","location":null,"numPassingAsserts":0,"status":"passed","title":"App is reading the mobx store list property"}],"skipped":false,"leaks":false}],"wasInterrupted":false}